class Meters:
    """Class representing the Meters"""

    STATUS_MAP = {
        "total_cancelled_credits_meter": [],
        "total_in_meter": [],
        "total_out_meter": [],
        "total_jackpot_meter": [],
        "games_played_meter": [],
        "games_won_meter": [],
        "games_lost_meter": [],
        "games_last_power_up": [],
        "games_last_slot_door_close": [],
        "slot_door_opened_meter": [],
        "power_reset_meter": [],
        "s1_bills_accepted_meter": [],
        "s5_bills_accepted_meter": [],
        "s10_bills_accepted_meter": [],
        "s20_bills_accepted_meter": [],
        "s50_bills_accepted_meter": [],
        "s100_bills_accepted_meter": [],
        "s500_bills_accepted_meter": [],
        "s1000_bills_accepted_meter": [],
        "s200_bills_accepted_meter": [],
        "s25_bills_accepted_meter": [],
        "s2000_bills_accepted_meter": [],
        "s2500_bills_accepted_meter": [],
        "s5000_bills_accepted_meter": [],
        "s10000_bills_accepted_meter": [],
        "s20000_bills_accepted_meter": [],
        "s25000_bills_accepted_meter": [],
        "s50000_bills_accepted_meter": [],
        "s100000_bills_accepted_meter": [],
        "s250_bills_accepted_meter": [],
        "cashout_ticket_number": [],
        "cashout_amount_in_cents": [],
        "ASCII_game_ID": [],
        "ASCII_additional_ID": [],
        "bin_denomination": [],
        "bin_max_bet": [],
        "bin_progressive_mode": [],
        "bin_game_options": [],
        "ASCII_paytable_ID": [],
        "ASCII_base_percentage": [],
        "bill_meter_in_dollars": [],
        "ROM_signature": [],
        "current_credits": [],
        "bin_level": [],
        "amount": [],
        "partial_pay_amount": [],
        "bin_reset_ID": [],
        "true_coin_in": [],
        "true_coin_out": [],
        "current_hopper_level": [],
        "credit_amount_of_all_bills_accepted": [],
        "coin_amount_accepted_from_external_coin_acceptor": [],
        "country_code": [],
        "bill_denomination": [],
        "meter_for_accepted_bills": [],
        "number_bills_in_stacker": [],
        "credits_SAS_in_stacker": [],
        "machine_ID": [],
        "sequence_number": [],
        "validation_type": [],
        "index_number": [],
        "date_validation_operation": [],
        "time_validation_operation": [],
        "validation_number": [],
        "ticket_amount": [],
        "ticket_number": [],
        "validation_system_ID": [],
        "expiration_date_printed_on_ticket": [],
        "pool_id": [],
        "current_hopper_length": [],
        "current_hopper_status": [],
        "current_hopper_percent_full": [],
        "bin_validation_type": [],
        "total_validations": [],
        "cumulative_amount": [],
        "total_number_of_games_implemented": [],
        "game_n_number": [],
        "game_n_coin_in_meter": [],
        "game_n_coin_out_meter": [],
        "game_n_jackpot_meter": [],
        "geme_n_games_played_meter": [],
        "game_n_number_config": [],
        "game_n_ASCII_game_ID": [],
        "game_n_ASCII_additional_id": [],
        "game_n_bin_denomination": [],
        "game_n_bin_max_bet": [],
        "game_n_bin_progressive_group": [],
        "game_n_bin_game_options": [],
        "game_n_ASCII_paytable_ID": [],
        "game_n_ASCII_base_percentage": [],
        "ASCII_SAS_version": [],
        "ASCII_serial_number": [],
        "selected_game_number": [],
        "number_of_enabled_games": [],
        "enabled_games_numbers": [],
        "cashout_type": [],
        "cashout_amount": [],
        "ticket_status": [],
        "parsing_code": [],
        "validation_data": [],
        "registration_status": [],
        "asset_number": [],
        "registration_key": [],
        "POS_ID": [],
        "game_lock_status": [],
        "available_transfers": [],
        "host_cashout_status": [],
        "AFT_status": [],
        "max_buffer_index": [],
        "current_cashable_amount": [],
        "current_restricted_amount": [],
        "current_non_restricted_amount": [],
        "restricted_expiration": [],
        "restricted_pool_ID": [],
        "game_number": [],
        "features_1": [],
        "features_2": [],
        "features_3": [],
    }

    @classmethod
    def get_status(cls, key):
        """Get the status value for the given key.

        Args:
            key (str): The key for the status.

        Returns:
            str: The corresponding status value or an error message if the key is not found.
        """
        # Use get() method to retrieve the value, or return an error message.
        return cls.STATUS_MAP.get(key, f"Unknown key: {key}")

    @classmethod
    def get_non_empty_status_map(cls):
        """Return a dictionary containing only keys with non-empty values."""
        non_empty_map = {key: value for key, value in cls.STATUS_MAP.items() if value}
        return non_empty_map
